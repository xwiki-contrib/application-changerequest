## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#template('changerequest/alert/macros.vm')

#macro(displayReviewAddedEvent $compositeEvent)
    ###
    ### Icons
    ###
    #set ($eventDescriptor = $services.eventstream.getDescriptorForEventType($compositeEvent.type, $xcontext.isMainWiki()))
    #set ($mainIcon = $eventDescriptor.applicationIcon)
    #set ($smallIcon = $eventDescriptor.eventTypeIcon)

    ###
    ### Content
    ###
    #define($content)
        #set ($document = $xwiki.getDocument($compositeEvent.document))
    <div class="notification-page">
      <a href="$!escapetool.xml($document.getURL())">$document.displayTitle</a>
      #_displayWikiDocumentInfo($compositeEvent)
    </div>
    <div class="notification-description">
        #set ($onlyDelegates = true)
        #foreach ($event in $compositeEvent.events)
            #if ("$!event.parameters.get('changerequest.review.originalApprover')" != '')
                #set ($onlyDelegates = ($onlyDelegates && true))
            #else
                #set ($onlyDelegates = false)
            #end
        #end
        #set ($eventType = ${compositeEvent.type})
        #if ($onlyDelegates)
            #set ($eventType = "${eventType}.delegate")
        #end
        #if ($compositeEvent.users.size() == 1)
            $services.localization.render("notifications.events.${eventType}.description.by.1user", ["#displayNotificationEventUsers($compositeEvent.users, true, false)"])
        #else
          <div>
              $services.localization.render("notifications.events.${eventType}.description.by.users", [$compositeEvent.users.size()])
          </div>
          <div>
              #displayNotificationEventUsers($compositeEvent.users, true, true)
          </div>
        #end
      <div><small class="text-muted">$escapetool.xml($services.date.displayTimeAgo($compositeEvent.dates.get(0)))</small></div>
    </div>
    #end
    ###
    ### Details
    ###
    #define($details)
        #displayReviewAddedEventDetails($compositeEvent)
    #end
    ###
    ### Display
    ###
    #displayNotificationEventSkeleton($mainIcon, $smallIcon, $content, $details)
#end

#**
 * Default displayer for the notification details
 * @param $compositeEvent the event
 *#
#macro(displayReviewAddedEventDetails $compositeEvent)
    #define($rows)
        #foreach($event in $compositeEvent.events)
            ## Diff URL
            #set ($diffUrl = $xwiki.getURL($event.document, 'view', "viewer=changes&rev2=${event.documentVersion}"))
            <tr>
                #set ($originalApprover = $NULL)
                #if ($event.parameters && $event.custom.get('changerequest.review.originalApprover'))
                    #set ($originalApprover = $event.custom.get('changerequest.review.originalApprover'))
                #end
                #if ($originalApprover)
                    #set ($description = $services.localization.render("notifications.events.${event.type}.delegate.description", ["#displayUser($originalApprover, {'useInlineHTML': true})"]))
                #else
                    #set ($description = $services.localization.render("notifications.events.${event.type}.description"))
                #end
                #set ($eventDescriptor = $services.eventstream.getDescriptorForEventType($compositeEvent.type, $xcontext.isMainWiki()))
              <td>#displayNotificationEventUser($event.user)</td>
              <td class="description">$services.icon.renderHTML($eventDescriptor.eventTypeIcon) $description</td>
              <td class="text-right text-muted">#if($diffUrl!='')<a href="$escapetool.xml($diffUrl)">#end$escapetool.xml($xwiki.formatDate($event.date))#if($diffUrl!='')</a>#end</td>
            </tr>
        #end
    #end
    #displayNotificationEventDetailsSkeletons($events.size(), $rows)
#end

#displayReviewAddedEvent($compositeEvent)