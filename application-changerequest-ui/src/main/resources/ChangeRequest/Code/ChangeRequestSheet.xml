<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ChangeRequest.Code.ChangeRequestSheet" locale="">
  <web>ChangeRequest.Code</web>
  <name>ChangeRequestSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>ChangeRequest.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <originalMetadataAuthor>XWiki.Admin</originalMetadataAuthor>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>#if($doc.getObject('ChangeRequest.Code.ChangeRequestClass'))Change Request: $doc.title#{else}Change Request Sheet#end</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Discussions.Code.DisplayMessage"/}}

{{include reference="ChangeRequest.Code.ChangeRequestMacros"/}}

{{velocity}}
#set ($discard = $doc.use('ChangeRequest.Code.ChangeRequestClass'))
#set ($changeRequestId = $doc.documentReference.lastSpaceReference.name)
#set ($changeRequestOpt = $services.changerequest.getChangeRequest($changeRequestId))
#if ($changeRequestOpt.isPresent())
#set ($changeRequest = $changeRequestOpt.get())
#set ($modifiedFiles = $changeRequest.modifiedDocuments)
#set ($discard = $xwiki.jsx.use('ChangeRequest.Code.ChangeRequestSheet'))
#set ($discard = $xwiki.ssx.use('ChangeRequest.Code.ChangeRequestSheet'))
#set ($isNotMerged = $changeRequest.status != "MERGED")
#set ($checkIconSuccess = $services.icon.renderHTML('check'))
#set ($checkIconProblem = $services.icon.renderHTML('warning'))
#set ($allDiscussions = $services.changerequest.discussion.getDiscussionsFromChangeRequest($changeRequest))
#set ($canBeEdited = $services.changerequest.isAuthorizedToEdit($changeRequest))
#set ($displayDocExtra = false)
{{html clean="false"}}
&lt;div class="cr-main-div" data-changerequest-id="$changeRequestId"&gt;
  &lt;div id="discussions" class="hidden"&gt;
  #foreach ($changeRequestDiscussion in $allDiscussions)
    #set ($reference = $changeRequestDiscussion.reference)
    #if ($reference.type != "CHANGE_REQUEST_COMMENT")
      ## TODO: handle pagination
      #set ($messages = $services.discussions.getMessagesByDiscussion($changeRequestDiscussion.discussion, 0, 10))
      #set ($dataAttributes = $NULL)
      #set ($discard = "#getDiscussionDataAttributes($changeRequestDiscussion.discussion, $dataAttributes)")
      &lt;div class="discussion" ${dataAttributes} &gt;
        #foreach ($message in $messages)
          #displayMessage($message)
        #end
      &lt;/div&gt;
    #end
  #end
  &lt;/div&gt;&lt;!-- End discussions --&gt;
  &lt;!-- Nav tabs --&gt;
  &lt;ul class="nav nav-tabs" role="tablist" id="changeRequestTabs"&gt;
    &lt;li role="presentation" class="active"&gt;&lt;a href="#home" aria-controls="home" role="tab" data-toggle="tab"&gt;
      $services.localization.render('changerequest.sheet.tab.description.title')
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li role="presentation"&gt;&lt;a href="#filechanges" aria-controls="filechanges" role="tab" data-toggle="tab"&gt;
      &lt;span class="label label-default"&gt;$modifiedFiles.size()&lt;/span&gt;
      $services.localization.render('changerequest.sheet.tab.filechanges.title')
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li role="presentation"&gt;&lt;a href="#reviews" aria-controls="reviews" role="tab" data-toggle="tab"&gt;
      &lt;span class="label label-default"&gt;$changeRequest.reviews.size()&lt;/span&gt;
      $services.localization.render('changerequest.sheet.tab.reviews.title')
      &lt;/a&gt;
    &lt;/li&gt;
    #if ($isNotMerged)
    &lt;li role="presentation"&gt;&lt;a href="#checks" aria-controls="checks" role="tab" data-toggle="tab"&gt;
      #set ($canBeMerged = $services.changerequest.canBeMerged($changeRequest))
      #if ($canBeMerged)
        &lt;span class="label label-success"&gt;$checkIconSuccess&lt;/span&gt;
      #else
        &lt;span class="label label-danger"&gt;$checkIconProblem&lt;/span&gt;
      #end
      $services.localization.render('changerequest.sheet.tab.checks.title')
      &lt;/a&gt;
    &lt;/li&gt;
    #end
  &lt;/ul&gt;
  &lt;!-- Tab panes --&gt;
  &lt;div class="tab-content change-request-sheet"&gt;
    &lt;div role="tabpanel" class="tab-pane active" id="home"&gt;
      &lt;div class="cr-description well"&gt;
        #displayDescription()
      &lt;/div&gt;&lt;!-- End description --&gt;
      &lt;div id="timeline-content"&gt;
        &lt;ul class="timeline"&gt;
        #set ($eventSearchResult = $services.changerequest.notifications.getChangeRequestEvents($changeRequestId, 0, 100))
        #foreach ($event in $eventSearchResult.stream().iterator())
          #displayEvent($event)
        #end
        &lt;/ul&gt;
      &lt;/div&gt;&lt;!-- End timeline --&gt;
      &lt;div id="discussion-comments"&gt;
        #foreach ($changeRequestDiscussion in $allDiscussions)
          #set ($reference = $changeRequestDiscussion.reference)
          #if ($reference.type == "CHANGE_REQUEST_COMMENT")
            ## TODO: handle pagination
            #set ($messages = $services.discussions.getMessagesByDiscussion($changeRequestDiscussion.discussion, 0, 10))
            &lt;div class="discussion" data-type="$reference.type" data-reference="$reference.reference"&gt;
              #foreach ($message in $messages)
                #displayMessage($message)
              #end
            &lt;/div&gt;
          #end
        #end
        #if ($xcontext.action == 'view')
        &lt;div class="add-comment"&gt;
          #set ($discussionCommentReference = $services.changerequest.discussion.createChangeRequestCommentDiscussion($changeRequestId))
          #set ($discussionCommentReferenceString = $services.discussions.serialize($discussionCommentReference))
          #set ($url = "${request.getContextPath()}/discussions/create/Message/$escapetool.url($discussionCommentReferenceString)")
          &lt;form method="post" action="$url" class="message-form"&gt;
          &lt;input type="hidden" name="storeConfiguration_changeRequestId" value="$changeRequestId" /&gt;
          &lt;input type="hidden" name="async" value="1" /&gt;
          &lt;input type="hidden" name="form_token" value="$!services.csrf.getToken()" /&gt;
          &lt;input type="hidden" name="discussionReference" value="$escapetool.xml($discussionCommentReferenceString)" /&gt;
          &lt;div class="comment-editor hidden"&gt;
            #displayMessageContentField()
          &lt;/div&gt;
          &lt;button type="button" class="btn btn-default comment-button"&gt;
          $services.icon.renderHTML('comment') Comment
          &lt;/button&gt;
          &lt;button type="button" class="btn btn-default cancel-button hidden"&gt;
          Cancel
          &lt;/button&gt;
          &lt;/form&gt;
        &lt;/div&gt;
        #end
      &lt;/div&gt;
    &lt;/div&gt;&lt;!-- End home --&gt;
    &lt;div role="tabpanel" class="tab-pane" id="filechanges"&gt;
&lt;div&gt;
{{/html}}

{{liveData
  id="changerequest-filechanges"
  properties="changerequest,filechange_type,doc.title,doc.location,filechange_author,filechange_version,filechange_documentVersion,_actions"
  source="liveTable"
  sourceParameters="resultPage=ChangeRequest.Code.FileChangeLiveTable&amp;translationPrefix=changerequest.livetable.filechange."
  filters="changerequest=$changeRequest.id"
  sort="doc.location:asc"
  limit="10"}}{
  "meta": {
    "propertyDescriptors": [
      { "id": "_actions", "displayer": { "id": "actions", "actions": ["edit", "fixconflict", "rebase"] } },
      {
        "id": "changerequest",
        "visible": false
      },
      {
        "id": "filechange_author",
        "displayer": "html",
        "editable": false
      },
      {
        "id": "doc.location",
        "editable": false
      },
      {
        "id": "doc.title",
        "displayer": "html",
        "editable": false
      },
      {
        "id": "filechange_type",
        "editable": false
      },
      {
        "id": "filechange_version",
        "editable": false
      },
      {
        "id": "filechange_documentVersion",
        "editable": false
      }
    ],
    "actions": [
      {
        "id": "fixconflict",
        "allowProperty": "doc.hasfixconflict",
        "urlProperty": "doc.fixconflict_url",
        "icon": "wrench",
        "name": "$services.localization.render('changerequest.sheet.fixconflict.button')"
      },
      {
        "id": "rebase",
        "allowProperty": "doc.hasrebase",
        "urlProperty": "doc.rebase_url",
        "icon": "refresh",
        "name": "$services.localization.render('changerequest.sheet.rebase.button')"
      }
    ]
  }
}
{{/liveData}}

{{html clean="false"}}
&lt;/div&gt;
#set ($conflictingFiles = {})
&lt;h3&gt;$services.localization.render('changerequest.sheet.alldifftitle')&lt;/h3&gt;
&lt;div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true"&gt;
#template('diff_macros.vm')
#foreach ($ref in $modifiedFiles)
  #set ($crMergeDocumentResultOpt = $services.changerequest.getMergeDocumentResult($changeRequest, $ref))
  #if ($crMergeDocumentResultOpt.isPresent())
  &lt;div class="panel panel-default"&gt;
    #set ($crMergeDocumentResult = $crMergeDocumentResultOpt.get())
    #if ($crMergeDocumentResult.hasConflicts())
      #set ($discard = $conflictingFiles.put($ref, $crMergeDocumentResult))
    #end
    #set ($isFileChangeOutdated = $services.changerequest.isFileChangeOutdated($crMergeDocumentResult.fileChange))
    #set ($renderedTitle = $crMergeDocumentResult.documentTitle)
    #set ($diffKey = $crMergeDocumentResult.identifier)
    #if ($crMergeDocumentResult.type == "DELETION")
      #set ($diffContent = "Deletion of the whole file.")
    #elseif ($crMergeDocumentResult.type == "CREATION")
      #set ($modifiedDoc = $crMergeDocumentResult.fileChange.modifiedDocument)
      ## We wrap the XWikiDocument in Document so that the diff macros behave correctly
      #set ($wrappedDocs = $xwiki.wrapDocs([$modifiedDoc]))
       #define ($diffContent)
        #displayDocumentRawChanges($NULL, $wrappedDocs.get(0))
      #end
    #else
      #set ($mergeDocumentResult = $crMergeDocumentResult.wrappedResult)
      #set ($modifiedDoc = $mergeDocumentResult.nextDocument)
      #set ($previousDoc = $mergeDocumentResult.previousDocument)
      ## We wrap the XWikiDocument in Document so that the diff macros behave correctly
      #set ($wrappedDocs = $xwiki.wrapDocs([$previousDoc, $modifiedDoc]))
      #define ($diffContent)
        #displayDocumentRawChanges($wrappedDocs.get(0), $wrappedDocs.get(1))
      #end
    #end
    &lt;div class="panel-heading" role="tab" id="heading-$diffKey"&gt;
      &lt;h4 class="panel-title"&gt;
        &lt;a role="button" data-toggle="collapse" data-parent="#accordion" href="#diff-$diffKey" aria-expanded="true" aria-controls="diff-$diffKey"&gt;
          &lt;span class="diff-labels"&gt;
            &lt;span class="label label-default commentcounter hidden"&gt;
              $services.icon.renderHTML('envelope') &lt;span class="counter" data-documentReference="$escapetool.xml($services.model.serialize($ref))"&gt;0&lt;/span&gt;
            &lt;/span&gt;
            #if ($crMergeDocumentResult.hasConflicts())
              &lt;span class="label label-warning label-diff-conflict" title="$escapetool.xml($services.localization.render('changerequest.sheet.diff.conflictLabel.title'))"&gt;
                $services.icon.renderHTML('wrench') $services.localization.render('changerequest.sheet.diff.conflictLabel')
              &lt;/span&gt;
            #end
            #if ($isFileChangeOutdated)
              &lt;span class="label label-warning label-diff-outdated" title="$escapetool.xml($services.localization.render('changerequest.sheet.diff.outdated.title'))"&gt;
                $services.icon.renderHTML('clock') $services.localization.render('changerequest.sheet.diff.outdated')
              &lt;/span&gt;
            #end
          &lt;/span&gt;
          $services.localization.render('changerequest.sheet.difftitle', [$renderedTitle])
        &lt;/a&gt;
      &lt;/h4&gt;
    &lt;/div&gt;
    &lt;div id="diff-$diffKey" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading-$diffKey"&gt;
      &lt;div class="panel-body diff-body" data-diffId="$escapetool.xml($diffKey)" data-documentReference="$escapetool.xml($services.model.serialize($ref))"&gt;$diffContent&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  #end
#end
&lt;/div&gt;
    &lt;/div&gt;&lt;!-- End file changes --&gt;
    &lt;div role="tabpanel" class="tab-pane" id="reviews"&gt;
    &lt;div class="approvers"&gt;
    #set ($approversList = $services.changerequest.getApprovers($changeRequest))
    #if ($approversList.isEmpty())
      &lt;span class="empty-approvers"&gt;No approvers explicitely defined for this change request. The approvers will be based entirely on approval right.&lt;/span&gt;
    #else
      Approvers of this change request:
      &lt;ul class="approvers-list"&gt;
      #foreach ($userReference in $approversList)
        #set ($userDocReference = $userReference.reference)
        &lt;li&gt;&lt;a href='$xwiki.getURL($userDocReference)'&gt;$xwiki.getPlainUserName($userDocReference)&lt;/a&gt;&lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end
    &lt;/div&gt;
    &lt;div id="reviewsContainer"&gt;
    #foreach ($review in $changeRequest.reviews)
      #set ($reviewAuthor = $xwiki.getUserName($review.author.reference))
      #if ($review.valid &amp;&amp; $review.approved)
        #set ($reviewPanelClass = "panel-success")
        #set ($reviewPanelTitle = $services.localization.render('changerequest.sheet.tab.review.title.approved', ["$reviewAuthor"]))
      #elseif ($review.valid &amp;&amp; !$review.approved)
        #set ($reviewPanelClass = "panel-warning")
        #set ($reviewPanelTitle = $services.localization.render('changerequest.sheet.tab.review.title.notapproved', ["$reviewAuthor"]))
      #elseif (!$review.valid &amp;&amp; $review.approved)
        #set ($reviewPanelClass = "panel-default")
        #set ($reviewPanelTitle = $services.localization.render('changerequest.sheet.tab.review.title.approved', ["$reviewAuthor"]))
      #else
        #set ($reviewPanelClass = "panel-default")
        #set ($reviewPanelTitle = $services.localization.render('changerequest.sheet.tab.review.title.notapproved', ["$reviewAuthor"]))
      #end
      #set ($canEditReview = $services.changerequest.review.canEditReview($review))
      &lt;div class="panel $reviewPanelClass review" data-reviewid="$review.id" data-approved="$review.approved" data-valid="$review.valid" data-date="$review.reviewDate.time" data-author="$escapetool.xml($services.user.serialize($review.author))"&gt;
        &lt;div class="panel-heading"&gt;
           #if ($canEditReview)
            #if ($review.valid)
              #set ($buttonTitle = $services.localization.render('changerequest.sheet.tab.review.button.markinvalid.title'))
              #set($buttonValue = "$services.icon.renderHTML('remove') $services.localization.render('changerequest.sheet.tab.review.button.markinvalid')")
              #set ($buttonClass = "btn-danger")
            #else
              #set ($buttonTitle = $services.localization.render('changerequest.sheet.tab.review.button.markvalid.title') )
              #set($buttonValue = "$services.icon.renderHTML('check') $services.localization.render('changerequest.sheet.tab.review.button.markvalid')")
              #set ($buttonClass = "btn-success")
            #end
            &lt;button class="btn $buttonClass badge outdated review-toggle-valid" data-review-id="$review.id" title="$buttonTitle"&gt;$buttonValue&lt;/button&gt;
          #elseif (!$review.valid)
            &lt;span class="label label-danger outdated" title="$services.localization.render('changerequest.sheet.tab.review.title.outdated.title')"&gt;$services.localization.render('changerequest.sheet.tab.review.title.outdated')&lt;/span&gt;
          #end
          &lt;span class="review-date"&gt;$datetool.format($review.reviewDate)&lt;/span&gt;
          &lt;h3 class="panel-title"&gt;$reviewPanelTitle&lt;/h3&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    #end
    &lt;/div&gt;
    &lt;/div&gt;&lt;!-- End reviews --&gt;
    #if ($isNotMerged)
    &lt;div role="tabpanel" class="tab-pane" id="checks"&gt;
    &lt;div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true"&gt;
    #set ($otherChangeRequestsWithSamePages = $services.changerequest.getOpenChangeRequestsTargetingSame($changeRequest))
    #if (!$otherChangeRequestsWithSamePages.isEmpty())
      &lt;div class="panel panel-info check-panel-other-cr"&gt;
        &lt;div class="panel-heading" role="tab" id="headingOtherCRPanel"&gt;
          &lt;h4 class="panel-title"&gt;
            &lt;a role="button" data-toggle="collapse" data-parent="#accordion" href="#otherCRPanel" aria-expanded="true" aria-controls="otherCRPanel"&gt;
              $services.icon.renderHTML('info') $services.localization.render('changerequest.sheet.checks.otherCR.title')
            &lt;/a&gt;
          &lt;/h4&gt;
        &lt;/div&gt; &lt;!-- End heading other CR panel --&gt;
        &lt;div id="otherCRPanel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOtherCRPanel"&gt;
          &lt;div class="panel-body"&gt;
            $services.localization.render('changerequest.sheet.existingChangeRequestSameChanges')
            #set ($id = "changerequests-samechanges")
            #set ($columns = ["doc.title", "authors", "status", "changedDocuments"])
            #set($columnsProperties = {
               "doc.title" : { "type" : "text", "link": "auto" },
               "authors": { "type": "suggest", "html": "true" },
               "status" : { "type" : "suggest" },
               "changedDocuments" : { "type": "suggest", "html": "true"}
            })
            #set ($changedDocumentFilters = [])
            #foreach ($changedDocument in $changeRequest.modifiedDocuments)
              #set ($discard = $changedDocumentFilters.add("&amp;changedDocuments=$services.model.serialize($changedDocument)"))
            #end
            #set($options = {
               "className":"ChangeRequest.Code.ChangeRequestClass",
               "rowCount": 5,
               "translationPrefix": "changerequest.livetable.",
               "extraParams": "&amp;status/join_mode=OR&amp;status=draft&amp;status=ready_for_review&amp;status=ready_for_merging&amp;changedDocuments/join_mode=OR$stringtool.join($changedDocumentFilters, '')",
               "outputOnlyHtml": true
            })
            #livetable($id $columns $columnsProperties $options)
        &lt;/div&gt;
      &lt;/div&gt;&lt;!-- End otherCR panel body --&gt;
     &lt;/div&gt;&lt;!-- End otherCR panel --&gt;
      #end
       #if ($changeRequest.status == "READY_FOR_REVIEW")
         #set ($statusPanelClass = "panel-info")
         #set ($statusIcon = $checkIconSuccess)
       #elseif ($changeRequest.status == "DRAFT")
         #set ($statusPanelClass = "panel-warning")
         #set ($statusIcon = $checkIconProblem)
       #elseif ($changeRequest.status == "READY_FOR_MERGING")
         #set ($statusPanelClass = "panel-success")
         #set ($statusIcon = $checkIconSuccess)
       #elseif ($changeRequest.status == "CLOSED")
         #set ($statusPanelClass = "panel-danger")
         #set ($statusIcon = $checkIconProblem)
       #end
       &lt;div class="panel check-panel-status $statusPanelClass"&gt;
        &lt;div class="panel-heading" role="tab" id="headingStatusPanel"&gt;
          &lt;h4 class="panel-title"&gt;
            &lt;a role="button" data-toggle="collapse" data-parent="#accordion" href="#statusPanel" aria-expanded="true" aria-controls="statusPanel"&gt;
              $statusIcon $doc.display('status')
            &lt;/a&gt;
          &lt;/h4&gt;
        &lt;/div&gt; &lt;!-- End heading status panel --&gt;
        &lt;div id="statusPanel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingStatusPanel"&gt;
          &lt;div class="panel-body"&gt;
            &lt;div class="explanation"&gt;
            #if ($changeRequest.status == "READY_FOR_REVIEW" || $changeRequest.status == "READY_FOR_MERGING")
              $services.localization.render('changerequest.sheet.checks.status.ready.explanation')
            #elseif ($changeRequest.status == "DRAFT")
              &lt;div class="explanation"&gt;$services.localization.render('changerequest.sheet.checks.status.draft.explanation')
            #elseif ($changeRequest.status == "CLOSED")
              &lt;div class="explanation"&gt;$services.localization.render('changerequest.sheet.checks.status.closed.explanation')
            #end
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;&lt;!-- End body status panel --&gt;
      &lt;/div&gt;&lt;!-- End status panel --&gt;
       #if ($conflictingFiles.isEmpty())
         #set ($conflictPanelClass = "panel-success")
         #set ($conflictPanelTitle = $services.localization.render('changerequest.sheet.tab.checks.conflicts.noconflict.title'))
         #set ($statusIcon = $checkIconSuccess)
       #else
         #set ($conflictPanelClass = "panel-warning")
         #set ($conflictPanelTitle = $services.localization.render('changerequest.sheet.tab.checks.conflicts.title', "$conflictingFiles.size()"))
         #set ($statusIcon = $checkIconProblem)
       #end
       &lt;div class="panel check-panel-conflict $conflictPanelClass"&gt;
        &lt;div class="panel-heading" role="tab" id="headingConflictPanel"&gt;
          &lt;h4 class="panel-title"&gt;
            &lt;a role="button" data-toggle="collapse" data-parent="#accordion" href="#conflictPanel" aria-expanded="true" aria-controls="conflictPanel"&gt;
              $statusIcon $conflictPanelTitle
            &lt;/a&gt;
          &lt;/h4&gt;
        &lt;/div&gt; &lt;!-- End heading conflict --&gt;
        &lt;div id="conflictPanel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingConflictPanel"&gt;
          &lt;div class="panel-body"&gt;
            #if ($conflictingFiles.isEmpty())
              $services.localization.render('changerequest.sheet.tab.checks.conflicts.noconflict.body')
            #else
              $services.localization.render('changerequest.sheet.tab.checks.conflicts.body', ["$conflictingFiles.size()", '&lt;a href="#filechanges" aria-controls="filechanges" data-toggle="tab"&gt;', '&lt;/a&gt;'])
            #end
          &lt;/div&gt;
        &lt;/div&gt;&lt;!-- End body conflict --&gt;
      &lt;/div&gt;&lt;!-- End panel conflict --&gt;
      #set ($approvalStrategy = $services.changerequest.mergeApprovalStrategy)
      #set ($canBeMerged = $approvalStrategy.canBeMerged($changeRequest))
      #if ($canBeMerged)
        #set ($strategyPanelClass = "panel-success")
        #set ($statusIcon = $checkIconSuccess)
      #else
        #set ($strategyPanelClass = "panel-warning")
        #set ($statusIcon = $checkIconProblem)
      #end
      #set ($strategyPanelText = $approvalStrategy.getStatus($changeRequest))
      &lt;div class="panel check-panel-strategy $strategyPanelClass"&gt;
        &lt;div class="panel-heading" role="tab" id="headingApprovalStrategyPanel"&gt;
          &lt;h4 class="panel-title"&gt;
            &lt;a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#approvalStrategyPanel" aria-expanded="false" aria-controls="approvalStrategyPanel"&gt;
              $statusIcon $services.localization.render('changerequest.sheet.tab.checks.approvalStrategy.title')
            &lt;/a&gt;
          &lt;/h4&gt;
        &lt;/div&gt; &lt;!-- End heading approval strategy --&gt;
        &lt;div id="approvalStrategyPanel" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingApprovalStrategyPanel"&gt;
          &lt;div class="panel-body"&gt;
           $strategyPanelText
          &lt;/div&gt;
        &lt;/div&gt;&lt;!-- End body approval strategy --&gt;
      &lt;/div&gt;&lt;!-- End panel approval strategy --&gt;
    &lt;/div&gt;&lt;!-- End panel accordion --&gt;
    &lt;/div&gt;&lt;!-- End merge tab --&gt;
    #end
  &lt;/div&gt;

&lt;/div&gt;
{{/html}}
#else
    No change request corresponding to the current id.
#end
{{/velocity}}</content>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8c39e9a2-e2ec-4e39-a32f-259c8e8d4446</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery'], function ($) {
  var removeCreateButton = function () {
    $('#tmCreate').remove();
  }
  
  $(document).on('xwiki:dom:updated', removeCreateButton);
  (XWiki.isInitialized &amp;&amp; removeCreateButton()) || $(document).on('xwiki:dom:loading', removeCreateButton);
});</code>
    </property>
    <property>
      <name>remove create</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ca32fb8c-d27c-4c25-9116-7d6ddf5b0cd0</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'bootstrap'], function ($) {
  var checkMergeButton = function() {
    $('#checkMerge').on('click', function() {
      $('#changeRequestTabs a[href="#merge"]').tab('show');
    })
  };

  $(document).on('xwiki:dom:updated', checkMergeButton);
  (XWiki.isInitialized &amp;&amp; checkMergeButton()) || $(document).on('xwiki:dom:loading', checkMergeButton);
})</code>
    </property>
    <property>
      <name>Check merge action </name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>fb3f6f6b-7a15-41ae-9adb-a717fa54d05f</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>define('ChangeRequestConflictModal', ['jquery', 'xwiki-meta', 'bootstrap'], function ($, xm) {
  
  var conflictModal = function (changeRequestId, fileChangeReference, fileChangeLocale) {
    var self = this;
    self.changeRequestId = changeRequestId;
    self.fileChangeReference = fileChangeReference;
    self.fileChangeLocale = fileChangeLocale;
    var currentReference = xm.documentReference;
    var changeRequestConflictRef = new XWiki.DocumentReference(currentReference.extractReference(XWiki.EntityType.WIKI).getName(), ["ChangeRequest", "Code"], "ChangeRequestConflict");
    self.postUrl = new XWiki.Document(changeRequestConflictRef).getURL('get');
    
    self.requestModal = function(previousVersion, nextVersion) {
      var warningConflictAction = $('#changeRequestConflictModal input[name=warningConflictAction]:checked').val();
      
      if (previousVersion &amp;&amp; nextVersion) {
        var original = previousVersion;
        var revised = nextVersion;
      } else if ($('select[name=original]').length &gt; 0 &amp;&amp; $('select[name=revised]').length &gt; 0) {
        var original = $('#modalConflictSelectVersion select[name=original]').val();
        var revised = $('#modalConflictSelectVersion select[name=revised]').val();
      }
      if ($('#changeRequestConflictModal')) {
        $('#changeRequestConflictModal').remove();
      }
      
      var params = {
        'form_token': xm.form_token,
        'filechange': self.fileChangeReference,
        'filechangeLocale': self.fileChangeLocale,
        'changerequest': self.changeRequestId,
        'original': original,
        'revised': revised,
        'warningConflictAction': warningConflictAction
      };
      
      var notification = new XWiki.widgets.Notification('Requesting conflict modal...','inprogress');
      $.post(self.postUrl, params).done(function (data) {
        notification.hide();
        $('body').append(data);
        $(document).trigger('xwiki:dom:updated', {'elements': $('#changeRequestConflictModal').toArray()});
        self.initModal();
      }).fail(function (data) {
        notification.replace(new XWiki.widgets.Notification('Error while getting conflict information.','error'));
      });
    };
    
    // Change the diff based on the action chosen.
    self.radioSelect = function () {
      var selectedValue = $('#changeRequestConflictModal input[name=warningConflictAction]:checked').val();
      if (selectedValue == "keepChangeRequest") {
        self.requestModal("NEXT", "MERGED");
        // It's the next and current value which will be used for the merge, so better use them in case of custom
        // conflicts resolution.
      } else if (selectedValue == "keepPublished" || selectedValue == "custom") {
        self.requestModal("NEXT", "CURRENT");
      }
    };
    
    self.submitAction = function () {
      var warningConflictAction = $('#changeRequestConflictModal input[name=warningConflictAction]:checked').val();
      
      var params = {
        'form_token': xm.form_token,
        'filechange': self.fileChangeReference,
        'filechangeLocale': self.fileChangeLocale,
        'changerequest': self.changeRequestId,
        'decision': warningConflictAction
      };
      
      if (warningConflictAction == 'custom') {
        var conflictReferences = [];
        
        $('#changeRequestConflictModal input[name=conflict_id]').each(function () {
          var conflictId = $(this).val();
          var selectValue = $('#conflict_decision_select_' + conflictId).val();
          var customValue = $('#conflict_decision_value_custom_' + conflictId).val();
          conflictReferences.add(conflictId);
          params["customDecision_" + conflictId] = selectValue;
          
          if (selectValue == 'custom') {
            params["customInput_" + conflictId] = customValue;
          }
        });
        params["conflictReferences"] = conflictReferences;
      }
      var notification = new XWiki.widgets.Notification('Applying conflict resolution...','inprogress');
      $.post(self.postUrl, params).done(function (data) {
        if (data.success) {
          notification.replace(new XWiki.widgets.Notification('Resolution applied successfully, the page will reload.','done'));
          window.location.reload();
        } else {
          notification.replace(new XWiki.widgets.Notification('An error happened when applying the conflict resolution.','error'));
        }
      }).fail(function () {
        notification.replace(new XWiki.widgets.Notification('Request error when applying the conflict resolution.','error'));
      });
    };
    
    self.initModal = function() {
      var modal = $('#changeRequestConflictModal');

      if (modal) {
        modal.on('hidden.bs.modal', function (e) {
          modal.remove();
          $('div.modal-backdrop').remove();
        });

        $('#changeRequestConflictModalChoices .panel').on('click', self.selectChoice);
        $('#changeRequestConflictModal input[name=warningConflictAction]').on('change', self.radioSelect);
        $('#changeRequestConflictChangeDiff').on('click', self.requestModal);
        $('#changeRequestConflictSubmitButton').on('click', self.submitAction);
        modal.modal('show');
      }
    };
  }
  
  return conflictModal;
});</code>
    </property>
    <property>
      <name>handle conflict modal</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>3</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>d36ff964-4454-4e7c-a928-f29636110a96</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
// last argument is a polyfill to use URLSearchParams with IE11
require(['jquery', 'xwiki-meta', 'ChangeRequestConflictModal', "$services.webjars.url('org.webjars.npm:url-search-params-polyfill', 'index.js')"], function ($, xm, ConflictModal) {
  var initialize = function () {
    $(".conflictFixing").on('click', function () {
      var button = $(this);
      var reference = button.attr('data-reference');
      var locale = button.attr('data-locale');
      var currentReference = xm.documentReference;
      var changeRequestId = currentReference.extractReference(XWiki.EntityType.SPACE).getName();
      var modal = new ConflictModal(changeRequestId, reference, locale);
      modal.requestModal('NEXT', 'MERGED');
    });
    
    console.log($(".action_fixconflict"));
    $(document).on('click', '.action_fixconflict', function (event) {
      event.preventDefault();
      var currentReference = xm.documentReference;
      var changeRequestId = currentReference.extractReference(XWiki.EntityType.SPACE).getName();
      var button = $(this);
      var link = button.attr('href');
      var urlParams = new URLSearchParams(link);
      var reference = urlParams.get('reference');
      var locale = urlParams.get('locale');
      var modal = new ConflictModal(changeRequestId, reference, locale);
      modal.requestModal('NEXT', 'MERGED');
    });
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loaded', initialize);
});</code>
    </property>
    <property>
      <name>Handle conflict button</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>4</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>5e6a11b2-96d9-4f13-9d20-484cd485d3a1</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'xwiki-meta'], function ($, xm) {
  var reviewModal = function (changeRequestId) {
    var self = this;
    self.changeRequestId = changeRequestId;
    var currentReference = xm.documentReference;
    var changeRequestReviewRef = new XWiki.DocumentReference(currentReference.extractReference(XWiki.EntityType.WIKI).getName(), ["ChangeRequest", "Code"], "ChangeRequestReview");
    self.postUrl = new XWiki.Document(changeRequestReviewRef).getURL('get');
    
    self.requestModal = function () {
      var params = {
        'form_token': xm.form_token,
        'action': 'create',
        'changerequest': self.changeRequestId
      };
      self.notification = new XWiki.widgets.Notification('Requesting review modal...','inprogress');
      $.post(self.postUrl, params).done(function (data) {
        self.notification.hide();
        $('body').append(data);
        $(document).trigger('xwiki:dom:updated', {'elements': $('#reviewModal').toArray()});
        self.initModal();
      }).fail(function (data) {
        self.notification.replace(new XWiki.widgets.Notification('Error while getting review information.','error'));
      });
    };

    var isEditorEmpty = function () {
      var textarea = $('#reviewModal textarea').first();
      var textareaContent = textarea.val();
      // regex and logic taken
      // from https://github.com/ckeditor/ckeditor4/blob/master/plugins/editorplaceholder/plugin.js#L67
      var fullPageRegex = /&lt;body.*?&gt;((?:.|[\n\r])*?)&lt;\/body&gt;/i;
      var bodyDataMatched = textareaContent.match(fullPageRegex);
      if (textarea.attr('data-syntax').includes('annotatedxhtml') &amp;&amp; bodyDataMatched &amp;&amp; (bodyDataMatched.length &gt; 1)) {
        textareaContent = bodyDataMatched[ 1 ];
      }
      return textareaContent.length === 0;
    };

    self.postComment = function (reviewId) {
      // We need to call beforeSave first to put the data in the actual content field.
      $(document).trigger('xwiki:actions:beforeSave');

      if (!isEditorEmpty()) {
        $(document).trigger('xwiki:actions:cancel');
        var params = {
          'form_token': xm.form_token,
          'action': 'getDiscussionPostUrl',
          'changerequest': self.changeRequestId,
          'reviewid': reviewId
        };

        $.post(self.postUrl, params).done(function (data) {
          $('#reviewModal input[name=discussionReference]').val(data.discussionReference);
          var commentData =  $('#reviewModal form[name=discussion-review]').serialize();
          $.post(data.discussionPostUrl, commentData).done(function (data) {
            self.notification.replace(new XWiki.widgets.Notification('Review posted','done'));
            window.location.reload();
          }).fail(function (data) {
            self.notification.replace(new XWiki.widgets.Notification('Request error while posting comment associated to the review.','error'));
            console.error(data);
          })
        }).fail(function (data) {
          self.notification.replace(new XWiki.widgets.Notification('Request error while preparing posting comment associated to the review.','error'));
          console.error(data);
        });
      } else {
        self.notification.replace(new XWiki.widgets.Notification('Review posted','done'));
        window.location.reload();
      }
    };
    
    self.submitAction = function () {
      var selectedValue = $('#reviewModal input[name=reviewChoice]:checked');
      if (selectedValue.length &gt; 0) {
        var isApproved = selectedValue.val() === 'approve';
        var params = {
          'form_token': xm.form_token,
          'action': 'create',
          'changerequest': self.changeRequestId,
          'approved': isApproved
        };
        self.notification = new XWiki.widgets.Notification('Posting review...','inprogress');
        $.post(self.postUrl, params).done(function (data) {
          if (data.success) {
            self.postComment(data.reviewId);
          } else {
            self.notification.replace(new XWiki.widgets.Notification('Error while posting review.','error'));
          }
        }).fail(function (data) {
          self.notification.replace(new XWiki.widgets.Notification('Request error while posting review.','error'));
          console.error(data);
        });
      }
    };
    
    self.initModal = function () {
      var modal = $('#reviewModal');

      if (modal) {
        modal.on('hidden.bs.modal', function (e) {
          modal.off('hidden.bs.modal');
          $('#submitReview').off('click');
          modal.remove();
          $('div.modal-backdrop').remove();
        });

        $('#submitReview').on('click', self.submitAction);
        modal.find('input[name="reviewChoice"]').on('click', function () {
          $('#submitReview').removeAttr('disabled');
        });
        modal.modal('show');
      }
    };
  }
  
  var initialize = function () {
    $("#addReview").on('click', function () {
      var currentReference = xm.documentReference;
      var changeRequestId = currentReference.extractReference(XWiki.EntityType.SPACE).getName();
      var modal = new reviewModal(changeRequestId);
      modal.requestModal();
    });
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
});</code>
    </property>
    <property>
      <name>Review modal</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>5</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>1966a41f-f230-4160-8f15-61b681b47304</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'xwiki-meta'], function ($, xm) {
  var initialize = function () {
    $(".btn.outdated").on('click', function () {
      var button = $(this);
      var currentReference = xm.documentReference;
      var changeRequestId = currentReference.extractReference(XWiki.EntityType.SPACE).getName();
      var currentReference = xm.documentReference;
      var changeRequestReviewRef = new XWiki.DocumentReference(currentReference.extractReference(XWiki.EntityType.WIKI).getName(), ["ChangeRequest", "Code"], "ChangeRequestReview");
      var postUrl = new XWiki.Document(changeRequestReviewRef).getURL('get');
      var setValid;
      if (button.hasClass('btn-danger')) {
        setValid = '0';
      } else {
        setValid = '1';
      }
      var reviewId = button.attr('data-review-id');
      var params = {
        'form_token': xm.form_token,
        'action': 'setstatus',
        'changerequest': changeRequestId,
        'reviewid': reviewId,
        'isvalid': setValid
      }
      var notification = new XWiki.widgets.Notification('Changing review status...','inprogress');
      $.post(postUrl, params).done(function (data) {
        if (data.success) {
          notification.replace(new XWiki.widgets.Notification('Review status edited','done'));
          window.location.reload();
        } else {
          notification.replace(new XWiki.widgets.Notification('Error while changing status.','error'));
        }
      }).fail(function (data) {
        notification.replace(new XWiki.widgets.Notification('Request error while changing status.','error'));
        console.error(data);
      });
    });
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
})</code>
    </property>
    <property>
      <name>Review outdated button</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use/>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>6</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ea5056ef-4799-4d88-9265-df9cd9c48978</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>define('ChangeRequestDiscussionHandler', ['jquery', 'xwiki-meta', 'bootstrap'], function ($, xm) {
  var currentReference = xm.documentReference;
  var discussionPageReference = new XWiki.DocumentReference(currentReference.extractReference(XWiki.EntityType.WIKI).getName(), ["ChangeRequest", "Code"], "ChangeRequestDiscussion");
  var discussionPageUrl = new XWiki.Document(discussionPageReference).getURL('get');
  
  var retrieveMessage = function (data) {
    var messageReference = data.messageReference;
    $.get(discussionPageUrl, {
      messageReference: messageReference,
      form_token: xm.form_token,
      outputSyntax: 'plain'
    }).done(function (data) {
      var discussionContent = $(data);
      $('#discussions').append(discussionContent);
      $(document).trigger('xwiki:dom:updated', {elements: $('#discussions').toArray()});
    }).fail(function (data) {
       console.error("Error while trying to retrieve message: " + messageReference);
       console.log(data);
    });
  };
  
  return {
    retrieveMessage
  };
});</code>
    </property>
    <property>
      <name>Discussion handler</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>7</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>b7c6493f-b4dd-4a49-ad84-0ea565d588ea</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
define('CommentEditor', ['jquery', 'xwiki-meta', 'ChangeRequestDiscussionHandler', 'bootstrap', 'xwiki-events-bridge'], function ($, xm, DiscussionHandler) {
  var commentEditor = function (element, requestData) {
    var self = this;
    self.element = element;
    self.requestData = requestData;
    var currentReference = xm.documentReference;
    var changeRequestDiscussionRef = new XWiki.DocumentReference(currentReference.extractReference(XWiki.EntityType.WIKI).getName(), ["ChangeRequest", "Code"], "ChangeRequestDiscussion");
    self.postUrl = new XWiki.Document(changeRequestDiscussionRef).getURL('get');
    
    self.requestEditor = function() {
      var notification = new XWiki.widgets.Notification('Requesting discussion modal...','inprogress');
      var params = {
        'action': 'displayEditor',
        'form_token': xm.form_token
      };
      $.extend(params, self.requestData)
      $.post(self.postUrl, params).done(function (data) {
        notification.hide();
        self.initEditor(data);
      }).fail(function (data) {
        notification.replace(new XWiki.widgets.Notification('Error while getting discussion information.','error'));
      });
    };
    
    self.submitAction = function () {
      var button = $(this);
      var form = button.parent('form');
      var url = form.attr('action');
      var notification = new XWiki.widgets.Notification('Submitting message...','inprogress');
      // We need to call beforeSave first to put the data in the actual content field.
      $(document).trigger('xwiki:actions:beforeSave');
      var data = form.serialize();
      $(document).trigger('xwiki:actions:cancel');
      $.post(url, data).done(function (data) {
        notification.replace(new XWiki.widgets.Notification('Message submitted with success.','success'));
        DiscussionHandler.retrieveMessage(data);
        self.editorDiv.remove();
      }).fail(function (data) {
        console.error(data);
        notification.replace(new XWiki.widgets.Notification('Error while submitting message.','error'));
      });
    };
    
    self.cancelAction = function () {
      $(document).trigger('xwiki:actions:cancel');
      self.editorDiv.remove();
    };
    
    var getLine = function (element) {
      var parent;
      if (element.prop('tagName') === 'TR') {
        parent = element;
      } else {
        parent = element.parents('tr');
      }
      return parent;
    }
    
    self.initEditor = function (data) {
      if (self.requestData.type == 'diffLine') {
        var currentLine = getLine(self.element);
        if (currentLine.next('.discussion-line').length) {
          currentLine = currentLine.next();
        }
        var newLine = $('&lt;tr class="discussion-line discussion-editor"&gt;&lt;td colspan="3"&gt;&lt;/td&gt;&lt;/tr&gt;');
        newLine.insertAfter(currentLine);
        newLine.find('td').append($(data));
        self.editorDiv = newLine;
      }
      $(document).trigger('xwiki:dom:updated', {'elements': self.editorDiv.toArray()});
      self.editorDiv.find('.comment-button').on('click', self.submitAction);
      self.editorDiv.find('.cancel-button').on('click', self.cancelAction);
    }
  }
  return commentEditor;
})</code>
    </property>
    <property>
      <name>Comment editor</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>8</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>7fa8865f-d219-44cf-b53b-4751e6b4701d</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['CommentEditor', 'jquery', 'xwiki-meta'], function (CommentEditor, $, xm) {
  var hasLineNumber = function (element) {
    return (element.hasClass('diff-line-number') &amp;&amp; element.text() !== "");
  }
  var getLine = function (element) {
    var parent;
    if (element.prop('tagName') === 'TR') {
      parent = element;
    } else {
      parent = element.parents('tr');
    }
    return parent;
  }
  var getLineNumber = function (element) {
    var siblings = getLine(element).find('.diff-line-number');
    for (var i = 0; i &lt; siblings.length; i++) {
      var sibling = $(siblings[i]);
      if (hasLineNumber(sibling)) {
        return sibling.text();
      }
    }
  }
  var getChangeType = function (element) {
    var diffLine = getLine(element).find('.diff-line');
    if (diffLine.hasClass('diff-line-deleted')) {
      return "REMOVED";
    } else if (diffLine.hasClass('diff-line-added')) {
      return "ADDED";
    } else if (diffLine.hasClass('diff-line-context')) {
      return "UNCHANGED";
    }
  }
  
  // this function returns an array of two element:
  // first element is the entity reference,
  // second element is the diffBlockId
  var getEntityReferenceAndDiffBlock = function (element) {
    var diffBlockId = element.parents('.diff-container').parent().prev('.diff-header').attr('data-property-name');
    var entityReference = element.parents('.diff-group').children('dt').first().attr('data-reference');
    return [entityReference, diffBlockId];
  }
  
  var initialize = function() {
    $('.diff-container tr').on('click', function () {
      var diffBody = $(this).parents('.diff-body');
      var diffId = diffBody.attr('data-diffid');
      var targetReference = diffBody.attr('data-documentreference');
      var documentParts = getEntityReferenceAndDiffBlock($(this));
      var lineNumber = getLineNumber($(this));
      var changeType = getChangeType($(this));
      var changeRequestId = $(this).parents('.cr-main-div').attr('data-changerequest-id');
      var editor = new CommentEditor($(this), {
        'type': 'diffLine',
        'changeRequestId': changeRequestId,
        'diffId': diffId,
        'lineNumber': lineNumber,
        'changeType': changeType,
        'targetReference': targetReference,
        'entityReference': documentParts[0],
        'diffBlockId': documentParts[1]
      });
      editor.requestEditor();
    });
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
});</code>
    </property>
    <property>
      <name>Diff comment</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>9</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>9d738b95-e0e7-4882-a98e-1da0cefa97b0</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'xwiki-meta'], function ($, xm) {
  var placeDiscussions = function (index, element) {
    var discussion = $(element);
    if (discussion.find('.message').length &gt; 0) {
      var entityType = discussion.attr('data-type');
      if (entityType === 'LINE_DIFF') {
        placeLineDiffDiscussion(discussion);
      } else if (entityType === 'CHANGE_REQUEST_COMMENT') {
        placeCommentDiscussion(discussion);
      } else if (entityType == 'REVIEW') {
        placeReviewDiscussion(discussion);
      }
    }
  };
  
  var placeReviewDiscussion = function (discussion) {
    var reviewId = discussion.attr('data-reference');
    var reviewElement = $('.review[data-reviewid=' + reviewId +']');
    if (reviewElement) {
      reviewElement.append(discussion);
      discussion.wrap('&lt;div class="panel-body"&gt;&lt;/div&gt;');
    }
  };
  
  var placeCommentDiscussion = function (discussion) {
    if ($('#discussion-comments .discussion')) {
      $('#discussion-comments .discussion').append(discussion.find('.message'));
    } else {
      discussion.insertBefore($('#discussion-comments .add-comment'));
    }
  };
  
  var incrementCounter = function (reference) {
    var currentCounterSpan = $('.counter[data-documentReference="' + reference +'"]');
    var counter = parseInt(currentCounterSpan.text()) + 1;
    currentCounterSpan.text(counter);
    currentCounterSpan.parent().removeClass('hidden');
  };
  
  var findLineContainer = function (discussion) {
    var targetReference = discussion.attr('data-targetreference');
    var diffId = discussion.attr('data-diffid');
    
    // try first to find the diff file with same exact id
    var mainContainer = $('.diff-body[data-diffid="' + diffId + '"]');
    var outdated = false;
    var line;
    
    // if we did not find it, it means the diff is outdated, we fallback on the diff concerning same document
    if (mainContainer.length == 0) {
      mainContainer = $('.diff-body[data-documentreference="' + targetReference + '"]');
      outdated = true;
    }
    
    // if we did not find the diff about same document, then it's another issue, we log an error.
    if (mainContainer.length == 0) {
      console.error("Cannot attach the discussion {0} to the window since there's no diff about {1}. The discussion will remain hidden.", discussion, targetReference);
      return;
    }
    
    // Now we have the main container, we need to find if it's about the main document metadata, its xclass or one of its xobject metadata.
    var entityReference = discussion.attr('data-entityreference');
    // FIXME: this is a hack to use uppercase characters for entity type, because right now the diff macros
    // do not use the converter for serializing their references.
    entityReference = getUpperCaseTypeReference(entityReference);
    var diffRefContainer = mainContainer.find('.diff-group &gt; dt[data-reference="' + entityReference +'"]');
    // if we did not find the part of the diff related to the entity reference,
    // it means that we need to attach the comment to the whole diff.
    if (diffRefContainer.length == 0) {
      line = mainContainer;
      outdated = true;
    } else {
      // we have the entity reference diff container, now we can look for the specific property change
      var diffBlockId = discussion.attr('data-diffblockid');
      var diffBlockContainer = diffRefContainer.parent('.diff-group').find('.diff-header[data-property-name="' + diffBlockId + '"]').next().find('.diff-container');
      
      if (diffBlockContainer.length == 0) {
        line = diffRefContainer;
        outdated = true;
      } else {
        var lineChange = discussion.attr('data-linechange');
        var lineNumber = discussion.attr('data-linenumber');
        var searchingClass;
        if (lineChange === "ADDED") {
          searchingClass = "diff-line-added";
        } else if (lineChange === "REMOVED") {
          searchingClass = "diff-line-deleted";
        } else {
          searchingClass = "diff-line-context";
        }
        var filterLine = function () {
          var node = $(this);
          return node.text() === lineNumber &amp;&amp; node.parent().find('.diff-line').hasClass(searchingClass);
        }

        line = diffBlockContainer.find('.diff-line-number:contains("' + lineNumber + '")').filter(filterLine).parent();

        // if we did not find the line, then it's outdated and we should attach the discussion to the entity reference container.
        if (line.length == 0) {
          line = diffRefContainer;
          outdated = true;
        }
      }
    }
    return {'line': line, 'outdated': outdated};
  }
  
  var getUpperCaseTypeReference = function (entityReference) {
    var firstSemicolonIndex = entityReference.indexOf(':');
    var type = entityReference.substr(0, firstSemicolonIndex);
    var reference = entityReference.substr(firstSemicolonIndex+1);
    return type.toUpperCase() + ":" + reference;
  };
  
  var insertLineDiffDiscussion = function (discussion) {
    var lineResult = findLineContainer(discussion);
    if (lineResult) {
      var targetReference = discussion.attr('data-targetreference');
      var reference = discussion.attr('data-reference');
      discussion.insertAfter(lineResult.line);
      if (lineResult.line.parents('table').length &gt; 0) {
        discussion.wrap('&lt;tr class="discussion-line" data-reference="'+reference+'"&gt;&lt;td colspan="3"&gt;&lt;/td&gt;&lt;/tr&gt;');
      } else {
        discussion.wrap('&lt;div class="discussion-line" data-reference="'+reference+'"&gt;&lt;/div&gt;');
      }
      if (lineResult.outdated) {
        discussion.addClass('discussion-outdated');
        discussion.find('.outdated-message').removeClass('hidden');
        discussion.find('.message-content').collapse('hide');
      }
      incrementCounter(targetReference);
    }
  };
  
  var placeLineDiffDiscussion = function (discussion) {
    var reference = discussion.attr('data-reference');
    var existingLine = $('.discussion-line[data-reference="'+reference+'"]');
    if (existingLine.length) {
      existingLine.find('.discussion').append(discussion.find('.message'));
    } else {
      insertLineDiffDiscussion(discussion);
    }
  }
  
  var placeAllDiscussions = function () {
    $('#discussions .discussion').each(placeDiscussions);
  };
  
  var toggleCollapseExpandButton = function (isExpanded, element) {
    if (isExpanded) {
      element.find('.collapse-button').removeClass('hidden');
      element.find('.expand-button').addClass('hidden');
    } else {
      element.find('.expand-button').removeClass('hidden');
      element.find('.collapse-button').addClass('hidden');
    }
  };
  
  var initialize = function () {
    placeAllDiscussions();
    $(document).on('xwiki:dom:updated', placeAllDiscussions);
    $(document).on('hidden.bs.collapse', '.message-content', function (event) {
      toggleCollapseExpandButton(false, $(this).parent());
    });
    $(document).on('shown.bs.collapse', '.message-content', function (event) {
      toggleCollapseExpandButton(true, $(this).parent());
    });
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
});</code>
    </property>
    <property>
      <name>Comment placement</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>10</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>18a7666e-e031-4751-aff2-053b23280ec0</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'xwiki-meta', 'ChangeRequestDiscussionHandler'], function ($, xm, DiscussionHandler) {
  var submitComment = function (form) {
    var url = form.attr('action');
    var notification = new XWiki.widgets.Notification('Submitting message...','inprogress');
    // We need to call beforeSave first to put the data in the actual content field.
    $(document).trigger('xwiki:actions:beforeSave');
    var data = form.serialize();
    $(document).trigger('xwiki:actions:cancel');
    $.post(url, data).done(function (data) {
      notification.replace(new XWiki.widgets.Notification('Message submitted with success.','success'));
      DiscussionHandler.retrieveMessage(data);
    }).fail(function (data) {
      console.error(data);
      notification.replace(new XWiki.widgets.Notification('Error while submitting message.','error'));
    });
  };
  
  var initialize = function () {
    $('.add-comment .comment-button').on('click', function (event) {
      var commentEditor = $(this).siblings('.comment-editor');
      var cancelButton = $(this).siblings('.cancel-button');
      if (commentEditor) {
        if (commentEditor.hasClass('hidden')) {
          commentEditor.removeClass('hidden');
          cancelButton.removeClass('hidden');
          $(this).removeClass('btn-default');
          $(this).addClass('btn-primary');
        } else {
          submitComment($(this).parent('form'));
        }
      }
    });
    $('.add-comment .cancel-button').on('click', function () {
      var commentEditor = $(this).siblings('.comment-editor');
      var commentButton = $(this).siblings('.comment-button');
      $(document).trigger('xwiki:actions:cancel');
      commentEditor.addClass('hidden');
      $(this).addClass('hidden');
      commentButton.removeClass('btn-primary');
      commentButton.addClass('btn-default');
    });
  };
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
});</code>
    </property>
    <property>
      <name>Comment button</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>11</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>e8669304-a294-423d-bf0f-b2308119fb5e</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>'use strict';
require(['jquery', 'xwiki-meta'], function ($, xm) {
  var cancelled = false;
  var saveDescription = function (event) {
    if (cancelled) {
      return;
    }
    event.preventDefault();
    $(document).trigger('xwiki:actions:cancel');
    cancelled = true;
    $(this).trigger('click');
  };
  
  var cancelDescription = function () {
    $(document).trigger('xwiki:actions:cancel');
    window.location.href = new XWiki.Document(xm.documentReference).getURL('view');
  };
  
  var initialize = function () {
    $("#save-description").on('click', saveDescription);
    $("#cancel-description").on('click', cancelDescription);
  };
  
  (XWiki.isInitialized &amp;&amp; initialize()) || $(document).on('xwiki:dom:loading', initialize);
})</code>
    </property>
    <property>
      <name>description edit</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>573c678e-d12c-4ef9-a8ed-f8be4e011d1a</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.review-date {
  float: right;
}
.outdated {
  float: right;
  margin-left: 10px;
}
.tab-content.change-request-sheet &gt; .tab-pane.active {
  margin-top: 1em;
}
#discussion-comments {
  border: 1px dashed #dbdbdb;
  padding: 1em;
}
.add-comment {
  width: 66%;
}
.edit-description {
  float: right;
}
.description-placeholder {
  color: #7b7b7b;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>review</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>1</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>14ca3d0f-4ea2-4e87-9096-c36a3dad7f3a</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/* Variables */

@background: white;
@color-primary: black;
@color-light: black;
@color-dim: #6c6d6d;
@spacing: 20px;
@radius: 4px;

@date: 300px;
@dotborder: 4px;
@dot: 11px;
@line: 4px;

#timeline-content {
  margin-top: @spacing;
  text-align: center;  
}

/* Timeline */

.timeline {
  border-left: @line solid @color-primary;
  border-bottom-right-radius: @radius;
  border-top-right-radius: @radius;
  margin: @spacing auto;  
  position: relative;
  line-height: 1.4em;
  padding: @spacing;   
  list-style: none;
  text-align: left;  
  max-width: 60%;
  
  .event {
    border-bottom: 1px dashed fade(@color-light, 10%);
    margin-bottom: @spacing;  
    position: relative;

    &amp;:last-of-type { 
      padding-bottom: 0;
      margin-bottom: 0; 
      border: none;      
    }

    &amp;:before, &amp;:after {
      position: absolute;
      display: block;
      top: 0;
    }
    
    .content {
      position: relative;
      top: -1.5em;
    }

    .date {
      left: (((@date * 0.6) + @spacing + @line + @dot + (@dotborder * 2)) * 1.5) * -1;    
      color: fade(@color-light, 40%);
      text-align: right;
      min-width: @date;
      position: relative;
      display: inline-block;
    }

    &amp;:after {
      box-shadow: 0 0 0 @dotborder fade(@color-primary,100%);    
      left: (@spacing + @line + (@dot * 0.35)) * -1;        
      background: lighten(@background,5%);    
      border-radius: 50%;  
      height: @dot;
      width: @dot;
      content: "";
      top: 5px;
    }
  }
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>timeline</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>2</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>12f95fb8-3061-431f-9f40-5a038fb099b7</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>@highlighted: rgba(255, 255, 0, 0.2);

.diff-container tr {
  cursor: pointer;
}
.diff-container tr:hover {
  background: @highlighted;
}
.diff-line-deleted:hover, .diff-line-added:hover {
  background: inherit;
}
// FIXME: Should probably be inherited from XWiki?
tr.discussion-line:hover {
  background: white;
}
.discussion {
  width: 50%;
}
.message {
  border: 1px solid black;
  margin: 1em;
  border-top-left-radius: 1em;
  border-top-right-radius: 1em;
}
.message-metadata {
  background-color: lightgray;
  border-top-left-radius: 1em;
  border-top-right-radius: 1em;
  padding: 1em;
}
.message-content {
  padding: 1em;
}
.diff-labels {
  float: right;

  .label {
    margin: 5px;
  }
}
.message-badges {
  float: right;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>diff</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>ad7486e2-242f-4f22-8875-2b93ad9852b9</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.parameters=Request parameters|request.url=Request URL|request.wiki=Request wiki|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <content>{{velocity}}
#set ($changeRequestId = $doc.documentReference.lastSpaceReference.name)
#set ($changeRequestOpt = $services.changerequest.getChangeRequest($changeRequestId))
#if ($changeRequestOpt.isPresent())
#set ($status = $doc.getValue('status'))
#if ($status == 'draft')
  #set ($statusClass = "default")
#elseif ($status == 'merged')
  #set ($statusClass = "success")
#elseif ($status == 'ready_for_review')
  #set ($statusClass = "info")
#elseif ($status == 'ready_for_merging')
  #set ($statusClass = "primary")
#elseif ($status == 'closed')
  #set ($statusClass = "danger")
#end

{{html}}
&lt;span class="label label-$statusClass"&gt;$doc.display('status')&lt;/span&gt;
{{/html}}
#end
{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.template.title.before</extensionPointId>
    </property>
    <property>
      <name>org.xwiki.contrib.changerequest.title.status</name>
    </property>
    <property>
      <parameters/>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
  <object>
    <name>ChangeRequest.Code.ChangeRequestSheet</name>
    <number>1</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>e6d567c6-41f3-4059-992c-9bc02306bbab</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>, </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>action=Action|doc.reference=Document|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.parameters=Request parameters|request.url=Request URL|request.wiki=Request wiki|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <content>{{velocity}}
#set ($changeRequestId = $doc.documentReference.lastSpaceReference.name)
#set ($changeRequestOpt = $services.changerequest.getChangeRequest($changeRequestId))
#if ($changeRequestOpt.isPresent())
#set ($changeRequest = $changeRequestOpt.get())
#set ($isAuthorizedToMerge = $services.changerequest.isAuthorizedToMerge($changeRequest))
#set ($closeUrl = "$services.changerequest.getChangeRequestURL('save', $changeRequestId)?status=closed&amp;form_token=$services.csrf.token")
#set ($readyForReviewUrl = "$services.changerequest.getChangeRequestURL('save', $changeRequestId)?status=ready_for_review&amp;form_token=$services.csrf.token")
#set ($draftUrl = "$services.changerequest.getChangeRequestURL('save', $changeRequestId)?status=draft&amp;form_token=$services.csrf.token")
#set ($rebaseUrl = "$services.changerequest.getChangeRequestURL('rebase', $changeRequestId)?form_token=$services.csrf.token")
#set ($mergeUrl = $services.changerequest.getChangeRequestURL('merge', $changeRequestId))
#set ($status = $changeRequest.status)
#set ($canBeMerged = $services.changerequest.canBeMerged($changeRequest))
#set ($canBeReviewed = $services.changerequest.review.isAuthorizedToReview($changeRequest))
#set ($canBeEdited = $services.changerequest.isAuthorizedToEdit($changeRequest))
#if ($status == 'DRAFT' &amp;&amp; $canBeEdited)
{{html}}
&lt;div class="btn-group" id="changeRequestButtons"&gt;
  &lt;a href="$readyForReviewUrl" title="$services.localization.render('changerequest.sheet.ready.button.title')" rel="nofollow" class="btn btn-primary cr-ready-for-review"&gt;
    $services.localization.render('changerequest.sheet.ready.button')
  &lt;/a&gt;
  &lt;button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
    &lt;span class="caret"&gt;&lt;/span&gt;
    &lt;span class="sr-only"&gt;Toggle dropdown&lt;/span&gt;
  &lt;/button&gt;
  &lt;ul class="dropdown-menu"&gt;
    &lt;li class="cr-rebase"&gt;
      &lt;a href="$rebaseUrl" title="$services.localization.render('changerequest.sheet.rebase.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('refresh') $services.localization.render('changerequest.sheet.rebase.button')
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li class="cr-close"&gt;
      &lt;a href="$closeUrl" title="$services.localization.render('changerequest.sheet.close.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('lock') $services.localization.render('changerequest.sheet.close.button')
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
{{/html}}
#elseif ($status == 'READY_FOR_REVIEW' || $status == 'READY_FOR_MERGING')
{{html}}
&lt;div class="btn-group" id="changeRequestButtons"&gt;
  #if (!$canBeMerged)
    &lt;button title="$services.localization.render('changerequest.sheet.review.button.title')" class="btn btn-primary #if(!$canBeReviewed)disabled#end" id="addReview"&gt;
      $services.icon.renderHTML('eye') $services.localization.render('changerequest.sheet.review.button')
    &lt;/button&gt;
  #else
    &lt;a href="$mergeUrl" role="button" title="$services.localization.render('changerequest.sheet.merge.button.title')" class="btn btn-primary cr-merge #if(!$isAuthorizedToMerge)disabled#end"&gt;
      $services.icon.renderHTML('download') $services.localization.render('changerequest.sheet.merge.button')
    &lt;/a&gt;
  #end
  #if ($canBeEdited || ($canBeMerged &amp;&amp; $canBeReviewed))
  &lt;button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
    &lt;span class="caret"&gt;&lt;/span&gt;
    &lt;span class="sr-only"&gt;Toggle dropdown&lt;/span&gt;
  &lt;/button&gt;
  &lt;ul class="dropdown-menu"&gt;
    #if ($canBeMerged &amp;&amp; $canBeReviewed)
      &lt;li class=""&gt;
      &lt;a href="#" id="addReview" title="$services.localization.render('changerequest.sheet.review.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('eye') $services.localization.render('changerequest.sheet.review.button')
      &lt;/a&gt;
    &lt;/li&gt;
    #end
    #if ($canBeEdited)
    &lt;li class="cr-rebase"&gt;
      &lt;a href="$services.changerequest.getChangeRequestURL('rebase', $changeRequestId)?form_token=$services.csrf.token" title="$services.localization.render('changerequest.sheet.rebase.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('refresh') $services.localization.render('changerequest.sheet.rebase.button')
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li class="cr-convert-to-draft"&gt;
      &lt;a href="$draftUrl" title="$services.localization.render('changerequest.sheet.markdraft.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('coffee') $services.localization.render('changerequest.sheet.markdraft.button')
      &lt;/a&gt;
    &lt;/li&gt;
    &lt;li class="cr-close"&gt;
      &lt;a href="$closeUrl" title="$services.localization.render('changerequest.sheet.close.button.title')" rel="nofollow"&gt;
        $services.icon.renderHTML('lock') $services.localization.render('changerequest.sheet.close.button')
      &lt;/a&gt;
    &lt;/li&gt;
    #end
  &lt;/ul&gt;
  #end
&lt;/div&gt;
{{/html}}
#elseif ($changeRequest.status == 'CLOSED')
{{html}}
&lt;div class="btn-group" id="changeRequestButtons"&gt;
  &lt;a href="$services.changerequest.getChangeRequestURL('save', $changeRequestId)?status=ready_for_review&amp;form_token=$services.csrf.token" title="$services.localization.render('changerequest.sheet.open.button.title')" class="btn btn-primary cr-open #if(!$canBeEdited)disabled#end"&gt;
      $services.icon.renderHTML('unlock') $services.localization.render('changerequest.sheet.open.button')
  &lt;/a&gt;
  #if ($canBeEdited)
  &lt;button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
    &lt;span class="caret"&gt;&lt;/span&gt;
    &lt;span class="sr-only"&gt;Toggle dropdown&lt;/span&gt;
  &lt;/button&gt;
  &lt;ul class="dropdown-menu"&gt;
    &lt;li class="cr-open-as-draft"&gt;
      &lt;a href="$services.changerequest.getChangeRequestURL('save', $changeRequestId)?status=draft&amp;form_token=$services.csrf.token" title="$services.localization.render('changerequest.sheet.open_draft.button.title')"&gt;
      $services.localization.render('changerequest.sheet.open_draft.button')
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  #end
&lt;/div&gt;
{{/html}}
#end
#end
{{/velocity}}

</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.plaftorm.menu.content</extensionPointId>
    </property>
    <property>
      <name>org.xwiki.contrib.changerequest.menu.mergebutton</name>
    </property>
    <property>
      <parameters/>
    </property>
    <property>
      <scope/>
    </property>
  </object>
</xwikidoc>
